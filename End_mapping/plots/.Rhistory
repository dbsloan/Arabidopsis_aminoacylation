library(ggplot2)
moranella = read.csv("~/Downloads/moranella.csv")
ggplot(moranella, aes(x=Total_cell_CPM, y=Bacteriome_CPM, color=Genome)) + geom_point(alpha=0.5) + theme_bw()
ggplot(moranella, aes(x=Total_cell_CPM, y=Bacteriome_CPM, color=Genome)) + geom_point(alpha=0.5) + geom_abline() + theme_bw()
ggplot(moranella, aes(x=Total_cell_CPM, y=Bacteriome_CPM, color=Genome)) + geom_point(alpha=0.5) + geom_abline() + xlim(0,18) + theme_bw()
ggplot(moranella, aes(x=Total_cell_CPM, y=Bacteriome_CPM, color=Genome)) + geom_point(alpha=0.5) + geom_abline() + xlim(0,18) + ylim(0,18) + theme_bw()
ggplot(moranella, aes(x=Total_cell_CPM, y=Bacteriome_CPM, color=Genome)) + geom_point(alpha=0.5) + geom_abline() + xlim(0,18) + ylim(0,18) + theme_classic()
ggplot(moranella, aes(x=Total_cell_CPM, y=Bacteriome_CPM, color=Genome)) + geom_point(alpha=0.5) + geom_abline() + xlim(0,18) + ylim(0,18) + theme_bw()
ggplot(moranella, aes(x=Total_cell_CPM, y=Bacteriome_CPM, color=Genome)) + geom_point(alpha=0.5) + geom_abline() + xlim(0,18) + ylim(0,18) + theme(panel.grid.minor = element_blank()) + theme_bw()
ggplot(moranella, aes(x=Total_cell_CPM, y=Bacteriome_CPM, color=Genome)) + geom_point(alpha=0.5) + geom_abline() + xlim(0,18) + ylim(0,18) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme_bw()
library(ggplot2)
moranella = read.csv("~/Downloads/moranella.csv")
ggplot(moranella, aes(x=Total_cell_CPM, y=Bacteriome_CPM, color=Genome)) + geom_point(alpha=0.5) + geom_abline() + xlim(0,18) + ylim(0,18) + theme_bw()
plot2=ggplot(moranella, aes(x=Total_cell_CPM, y=log2FC, color=Genome)) + geom_point(alpha=0.5) + geom_hline(0) + facet_wrap(~Genome) + theme_bw()
plot2=ggplot(moranella, aes(x=Total_cell_CPM, y=log2FC, color=Genome)) + geom_point(alpha=0.5) + facet_wrap(~Genome) + theme_bw()
plot2
plot2=ggplot(moranella, aes(x=Total_cell_CPM, y=log2FC, color=Genome)) + geom_point(alpha=0.5) + facet_wrap(~Genome) + theme_bw() + theme(legend.position = "none")
plot2
shady = read.table("~/Downloads/CALL_SNPinfo.tsv", header=TRUE)
shady = read.table("~/Downloads/CALL_SNPinfo.tsv", header=TRUE, sep = '\t')
duplex_variants = read.csv("~/Downloads/duplex_variants.csv")
library (ggplot2)
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=VarType, cols=Genome, scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
source("/Users/sloan/Documents/ColoradoState/projects/mutation_detection/duplex_sequencing/NovaSeqRun_20200106/results/template_for_plots/upper_error_bar.R")
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=VarType, cols=Genome, scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=VarType, cols=duplex_variants$Genome, scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=duplex_variants$VarType, cols=duplex_variants$Genome, scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(Genome), cols=vars(VarType), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
duplex_variants$Line = factor(duplex_variants$Line, levels(c("msh1-1","msh1-2", "polIa", "polIb", "fpg-ogg1", "ung", "radA", "recA1", "recA3-1", "recA3-2", "osb2", "why2")))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
duplex_variants = read.csv("~/Downloads/duplex_variants.csv")
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
duplex_variants$Line = factor(duplex_variants$Line, levels(c("msh1-1","msh1-2", "polIa", "polIb", "fpg-ogg1", "ung", "radA", "recA1", "recA3-1", "recA3-2", "osb2", "why2")))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
duplex_variants = read.csv("~/Downloads/duplex_variants.csv")
levels(duplex_variants$Line)
levels(as.factor(duplex_variants$Line))
duplex_variants$Line = factor(as.factor(duplex_variants$Line), levels(c("msh1-1","msh1-2", "polIa", "polIb", "fpg-ogg1", "ung", "radA", "recA1", "recA3-1", "recA3-2", "osb2", "why2")))
levels(as.factor(duplex_variants$Line))
duplex_variants$Line = factor(duplex_variants$Line, levels = c("msh1-1","msh1-2", "polIa", "polIb", "fpg-ogg1", "ung", "radA", "recA1", "recA3-1", "recA3-2", "osb2", "why2"))
duplex_variants = read.csv("~/Downloads/duplex_variants.csv")
duplex_variants$Line = factor(duplex_variants$Line, levels = c("msh1-1","msh1-2", "polIa", "polIb", "fpg-ogg1", "ung", "radA", "recA1", "recA3-1", "recA3-2", "osb2", "why2"))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(face = "italic"))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(size = 12))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(size = 10))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(size = 12))
ggplot(duplex_variants, aes(fill=Mut, y=Variant.Freq, x=Line)) + geom_uperrorbar(aes(ymax=Variant.Freq+SE), width=0.2, position=position_dodge(0.9)) + geom_bar(position="dodge", stat="identity") + facet_grid(rows=vars(VarType), cols=vars(Genome), scales="free") + ylab("Variant Frequency (+ SE)") + theme_bw() + scale_fill_manual("legend", values = c("Mutant" = "firebrick3", "Wild Type" = "black")) + theme(legend.position="top", legend.title = element_blank(), strip.text = element_text(size = 14))
library(ggplot2)
?library
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25)
library(ggplot2)
library(viridis)
if (!requireNamespace("BiocManager", quietly = TRUE)){
install.packages("BiocManager")
}
if (!requireNamespace("treeio", quietly = TRUE)){
BiocManager::install("treeio")
}
library(treeio)
if (!requireNamespace("ggtree", quietly = TRUE)){
BiocManager::install("ggtree")
}
library(ggtree)
tree = ggtree::read.tree(file = "tree.nwk")
tree
ggplot(tree) + geom_tree() + geom_tiplab() + theme_tree()
ggplot(tree) + geom_tree(color="firebrick", size=0.5, linetype="dotted", layout="roundrect") + geom_tiplab() + theme_tree()
tree_rooted <- ape::root(tree, outgroup = "Helicobacter_pylori_AAD07685.1", resolve.root=TRUE)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree()
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=21, fill="chartreuse4", alpha=.3)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=35, fill="chartreuse4", alpha=.3)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3) + geom_hilight(node=45, fill="chartreuse4", alpha=.3)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3) + geom_hilight(node=46, fill="chartreuse4", alpha=.3)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3) + geom_hilight(node=44, fill="chartreuse4", alpha=.3)
?geom_hilight
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient") + geom_hilight(node=44, fill="chartreuse4", alpha=.3)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.6, type = "gradient") + geom_hilight(node=44, fill="chartreuse4", alpha=.6, type = "gradient")
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.6, type = "gradient") + geom_hilight(node=44, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE) + geom_hilight(node=44, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE) + geom_hilight(node=44, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE, extend=3)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE) + geom_hilight(node=44, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE, extend=2)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE) + geom_hilight(node=44, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE, extend=1)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE, extend=1 + geom_hilight(node=44, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE, extend=1)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE, extend=1)
gene_data = read.delim("gene_data.txt")
p1 = ggplot(tree_rooted, aes(x,y)) + geom_tree() + geom_tiplab(size=2.5) + hexpand(1.5) + theme_tree()
p2 = facet_plot(p1, panel = "Domains", data = gene_data, geom = geom_segment, mapping = aes(x=0, xend=Seq_Length, y=y, yend=y), size=0.5, color='black')
p3 = facet_plot(p2, panel = "Domains", data = gene_data, geom=geom_segment, aes(x=Domain_Start, xend=Domain_End, y=y, yend=y, col=Domain_Name), size=3) + theme(legend.position = "bottom") + scale_color_viridis(discrete = TRUE)
p4 = facet_plot(p3, panel = "Plastid Targeting", data = gene_data, geom=geom_col, aes(x=Plastid_Targeting), orientation = 'y', fill="chartreuse4") + theme(legend.position = "bottom")
p4
p1 = ggplot(tree_rooted, aes(x,y)) + geom_tree() + geom_tiplab(size=2.5) + hexpand(1.5) + theme_tree()
p1 = p1 + geom_hilight(node=36, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.6, type = "gradient", to.bottom=TRUE, extend=1)
p2 = facet_plot(p1, panel = "Domains", data = gene_data, geom = geom_segment, mapping = aes(x=0, xend=Seq_Length, y=y, yend=y), size=0.5, color='black')
p3 = facet_plot(p2, panel = "Domains", data = gene_data, geom=geom_segment, aes(x=Domain_Start, xend=Domain_End, y=y, yend=y, col=Domain_Name), size=3) + theme(legend.position = "bottom") + scale_color_viridis(discrete = TRUE)
p4 = facet_plot(p3, panel = "Plastid Targeting", data = gene_data, geom=geom_col, aes(x=Plastid_Targeting), orientation = 'y', fill="chartreuse4") + theme(legend.position = "bottom")
p4
p1 = ggplot(tree_rooted, aes(x,y)) + geom_tree() + geom_tiplab(size=2.5) + hexpand(1.5) + theme_tree()
p2 = facet_plot(p1, panel = "Domains", data = gene_data, geom = geom_segment, mapping = aes(x=0, xend=Seq_Length, y=y, yend=y), size=0.5, color='black')
p3 = facet_plot(p2, panel = "Domains", data = gene_data, geom=geom_segment, aes(x=Domain_Start, xend=Domain_End, y=y, yend=y, col=Domain_Name), size=3) + theme(legend.position = "bottom") + scale_color_viridis(discrete = TRUE)
p4 = facet_plot(p3, panel = "Plastid Targeting", data = gene_data, geom=geom_col, aes(x=Plastid_Targeting), orientation = 'y', fill="chartreuse4") + theme(legend.position = "bottom")
p4
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270, align = TRUE)
)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center")
)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center", offset=0.5)
)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center", offset=1)
)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center", offset.bar=0.9, offset.text=1)
)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center", offset=0.9, offset.text=1)
)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center", offset=1, offset.text=0.1)
)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25)
+ geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) \
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25)
+ geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center", offset=1, offset.text=0.1) + geom_cladelab(node=44, label = "MutS2b", angle=270, hjust = "center", offset=1, offset.text=0.1)
ggplot(tree_rooted) + geom_tree() + geom_tiplab(size=3) + theme_tree() + hexpand(0.25) + geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) + geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center", offset=1, offset.text=0.1) + geom_cladelab(node=44, label = "MutS2b", angle=270, hjust = "center", offset=1, offset.text=0.1)
gene_data = read.delim("gene_data.txt")
gene_data[1:5,]
#store the tree
p1 = ggplot(tree_rooted, aes(x,y)) + geom_tree() + geom_tiplab(size=2.5) + hexpand(1.5) + theme_tree()
#add a facet with lines corresponding to the length of each protein
p2 = facet_plot(p1, panel = "Domains", data = gene_data, geom = geom_segment, mapping = aes(x=0, xend=Seq_Length, y=y, yend=y), size=0.5, color='black')
#add the domains on top of those lines
p3 = facet_plot(p2, panel = "Domains", data = gene_data, geom=geom_segment, aes(x=Domain_Start, xend=Domain_End, y=y, yend=y, col=Domain_Name), size=3) + theme(legend.position = "bottom") + scale_color_viridis(discrete = TRUE)
#add another facet with a bar graph showing the probability of plastid targeting
p4 = facet_plot(p3, panel = "Plastid Targeting", data = gene_data, geom=geom_col, aes(x=Plastid_Targeting), orientation = 'y', fill="chartreuse4") + theme(legend.position = "bottom")
p4
library(ggplot2)
library(viridis)
if (!requireNamespace("BiocManager", quietly = TRUE)){
install.packages("BiocManager")
}
if (!requireNamespace("ggtree", quietly = TRUE)){
BiocManager::install("ggtree")
}
library(ggtree)
tree = ggtree::read.tree(file = "tree.nwk")
tree
tree$edge
tree$edge.length
tree$Nnode
tree$tip.label
ggplot(tree) + geom_tree() + geom_tiplab() + theme_tree()
ggplot(tree) + geom_tree(color="firebrick", size=0.5, linetype="dotted", layout="roundrect") + geom_tiplab(size=3) + theme_tree()
tree_rooted = ape::root(tree, outgroup = "Helicobacter_pylori_AAD07685.1", resolve.root=TRUE)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree()
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25)
ggplot(tree_rooted) + geom_tree() + geom_tiplab(size=3) + theme_tree() + hexpand(0.25) +
geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) +
geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) +
geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center", offset=1, offset.text=0.1) +
geom_cladelab(node=44, label = "MutS2b", angle=270, hjust = "center", offset=1, offset.text=0.1)
gene_data = read.delim("gene_data.txt")
gene_data[1:5,]
#store the tree
p1 = ggplot(tree_rooted, aes(x,y)) + geom_tree() + geom_tiplab(size=2.5) + hexpand(1.5) + theme_tree()
#add a facet with lines corresponding to the length of each protein
p2 = facet_plot(p1, panel = "Domains", data = gene_data, geom = geom_segment, mapping = aes(x=0, xend=Seq_Length, y=y, yend=y), size=0.5, color='black')
#add the domains on top of those lines
p3 = facet_plot(p2, panel = "Domains", data = gene_data, geom=geom_segment, aes(x=Domain_Start, xend=Domain_End, y=y, yend=y, col=Domain_Name), size=3) + theme(legend.position = "bottom") + scale_color_viridis(discrete = TRUE)
#add another facet with a bar graph showing the probability of plastid targeting
p4 = facet_plot(p3, panel = "Plastid Targeting", data = gene_data, geom=geom_col, aes(x=Plastid_Targeting), orientation = 'y', fill="chartreuse4") + theme(legend.position = "bottom")
p4
library(ggplot2)
library(viridis)
if (!requireNamespace("BiocManager", quietly = TRUE)){
install.packages("BiocManager")
}
if (!requireNamespace("ggtree", quietly = TRUE)){
BiocManager::install("ggtree")
}
library(ggtree)
tree = ggtree::read.tree(file = "tree.nwk")
tree
tree$tip.label
tree$Nnode
ggplot(data=tree) + geom_tree() + geom_tiplab() + theme_tree()
ggplot(tree) + geom_tree(color="firebrick", size=0.5, linetype="dotted", layout="roundrect") + geom_tiplab(size=3) + theme_tree()
tree_rooted = ape::root(tree, outgroup = "Helicobacter_pylori_AAD07685.1", resolve.root=TRUE)
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree()
ggplot(tree_rooted) + geom_tree() + geom_tiplab() + theme_tree() + hexpand(0.25)
ggplot(tree_rooted) + geom_tree() + geom_tiplab(size=3) + theme_tree() + hexpand(0.25) +
geom_hilight(node=36, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) +
geom_hilight(node=44, fill="chartreuse4", alpha=.3, type = "gradient", to.bottom=TRUE, extend=1) +
geom_cladelab(node=36, label = "MutS2a", angle=270, hjust = "center", offset=1, offset.text=0.1) +
geom_cladelab(node=44, label = "MutS2b", angle=270, hjust = "center", offset=1, offset.text=0.1)
gene_data = read.delim("gene_data.txt")
gene_data[1:5,]
p1 = ggplot(tree_rooted, aes(x,y)) + geom_tree() + geom_tiplab(size=2.5) + hexpand(1.5) + theme_tree()
p1
p2 = facet_plot(p1, panel = "Domains", data = gene_data, geom = geom_segment, mapping = aes(x=0, xend=Seq_Length, y=y, yend=y), size=0.5, color='black')
p2
p3 = facet_plot(p2, panel = "Domains", data = gene_data, geom=geom_segment, aes(x=Domain_Start, xend=Domain_End, y=y, yend=y, col=Domain_Name), size=3) + theme(legend.position = "bottom") + scale_color_viridis(discrete = TRUE)
p3
p4 = facet_plot(p3, panel = "Plastid Targeting", data = gene_data, geom=geom_col, aes(x=Plastid_Targeting), orientation = 'y', fill="chartreuse4") + theme(legend.position = "bottom")
p4
install.packages("tidyverse")
install.packages("BiocManager")
BiocManager::install("ggtree")
library(ggtree)
library (ggplot2)
ma_data = read.table("Downloads/MA_plot_input.txt", header=TRUE)
ggplot(ma_data, aes(x=baseMean, y=log2FoldChange, color=threshold, shape=arbor)) + geom_point() + theme_classic()
ggplot(ma_data, aes(x=log10(baseMean), y=log2FoldChange, color=threshold, shape=arbor)) + geom_point() + theme_classic()
ma_data = read.table("Downloads/MA_plot_input.txt", header=TRUE)
ggplot(ma_data, aes(x=log10(baseMean), y=log2FoldChange, color=threshold, shape=arbor)) + geom_point() + theme_classic()
ggplot(ma_data, aes(x=log10(baseMean), y=log2FoldChange, color=threshold, shape=arbor)) + geom_point() + theme_classic() + scale_color_manual(c("grey80", "firebrick"))
?scale_color_manual
ggplot(ma_data, aes(x=log10(baseMean), y=log2FoldChange, color=threshold, shape=arbor)) + geom_point() + theme_classic() + scale_color_manual(values=c("grey80", "firebrick"))
ggplot(ma_data, aes(x=log10(baseMean), y=log2FoldChange, color=threshold, shape=arbor)) + geom_point(alpha=0.3) + theme_classic() + scale_color_manual(values=c("grey80", "firebrick"))
ggplot(ma_data, aes(x=log10(baseMean), y=log2FoldChange, color=threshold, shape=arbor)) + geom_point(alpha=0.3) + theme_classic() + scale_color_manual(values=c("grey50", "firebrick"))
ggplot(ma_data, aes(x=log10(baseMean), y=log2FoldChange, color=threshold, shape=arbor)) + geom_point(alpha=0.3) + theme_classic() + scale_color_manual(values=c("grey50", "firebrick")) + ylim (c(-10,10))
ggplot(ma_data, aes(x=baseMean, y=log2FoldChange, color=threshold, shape=arbor)) + geom_point(alpha=0.3) + theme_classic() + scale_color_manual(values=c("grey50", "firebrick")) + ylim (c(-10,10)) + xlab("Mean of Normalized Counts") + scale_x_log10()
ggplot(ma_data, aes(x=baseMean, y=log2FoldChange, color=threshold, shape=arbor)) + geom_point(alpha=0.3) + theme_classic() + scale_color_manual(values=c("grey50", "firebrick")) + ylim (c(-10,10)) + xlab("Mean of Normalized Counts") + ylab("Log2 Fold Change (30C vs 20C)") + scale_x_log10()
ggplot(ma_data, aes(x=baseMean, y=log2FoldChange, color=threshold, shape=arbor)) + geom_point(alpha=0.3) + theme_classic() + scale_color_manual(values=c("grey50", "firebrick")) + ylim (c(-10,10)) + xlab("Mean of Normalized Counts") + ylab("Log2 Fold Change (30C vs 20C)") + scale_x_log10() + theme(legend.position = "none")
ggplot(ma_data, aes(x=baseMean, y=log2FoldChange, color=threshold, shape=arbor)) + geom_point(alpha=0.3) + scale_color_manual(values=c("grey50", "firebrick")) + ylim (c(-10,10)) + scale_x_log10() + xlab("Mean of Normalized Counts") + ylab("Log2 Fold Change (30C vs 20C)") + theme(legend.position = "none") + theme_classic()
ggplot(ma_data, aes(x=baseMean, y=log2FoldChange, color=threshold, shape=arbor)) + geom_point(alpha=0.3) + scale_color_manual(values=c("grey50", "firebrick")) + ylim (c(-10,10)) + scale_x_log10() + xlab("Mean of Normalized Counts") + ylab("Log2 Fold Change (30C vs 20C)") + theme_classic() + theme(legend.position = "none")
library (ggplot2)
MSR_data = read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20231220/output/plots/R_input.csv")
ggplot(data=MSR_data, aes(x=Trt, y=CCA_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Percentage CCA Tails") + ylim(c(0,100))
ggplot(data=MSR_data, aes(x=Trt, y=CCA_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Percentage CCA Tails") + ylim(c(0,100))
ggplot(data=MSR_data, aes(x=Trt, y=CCA_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Percentage CCA Tails") + ylim(c(0,100))
ggplot(data=MSR_data, aes(x=Trt, y=CCA_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Percentage CCA Tails") + ylim(c(0,100))
ggplot(data=MSR_data, aes(x=Trt, y=CCA_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Percentage CCA Tails") + ylim(c(0,100))
ggplot(data=MSR_data, aes(x=Trt, y=CCA_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Percentage CCA Tails") + ylim(c(0,100))
ggplot(data=MSR_data, aes(x=Trt, y=CCA_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Percentage CCA Tails") + ylim(c(0,100))
ggplot(data=MSR_data, aes(x=Trt, y=CCA_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Percentage CCA Tails") + ylim(c(0,100))
ggplot(data=MSR_data, aes(x=Trt, y=Other_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Non-CC/CCA Percentage") + ylim(c(0,100))
ggplot(data=MSR_data, aes(x=Trt, y=Other_Percentage)) + geom_jitter(width=0.05, alpha=0.8) + theme_bw() + xlab ("Treatment") + ylab ("Non-CC/CCA Percentage") + ylim(c(0,100))
AA_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/aa_R_input.txt", header=TRUE)
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=Biorep)) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome)
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=BioRep)) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome)
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep)) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome)
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome)
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome) + scale_color_brewer(palette = "Dark2")
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2")
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
AA_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/aa_R_input.txt", header=TRUE)
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
AA_data$Genome = factor(AA_data$Genome, levels=c("Nuclear", "Mitochondrial", "Plastid"))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(30,90)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
AA_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/aa_R_input2.txt", header=TRUE)
AA_data$Genome = factor(AA_data$Genome, levels=c("Nuclear", "Mitochondrial", "Plastid"))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
hline_values = data.frame(Genome=c("Mitochondrial", "Nuclear", "Plastid"), Mean_CCA=c(58.9, 52.2, 63.6))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA)) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
hline_values$Genome = factor(hline_values$Genome, levels=c("Nuclear", "Mitochondrial", "Plastid"))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA)) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, Color=Genome)) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
AA_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/aa_R_input2.txt", header=TRUE)
AA_data$Genome = factor(AA_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
hline_values = data.frame(Genome=c("Mitochondrial", "Nuclear", "Plastid"), Mean_CCA=c(58.9, 52.2, 63.6))
hline_values$Genome = factor(hline_values$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("Amino Acid") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
AA_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/aa_R_input2.txt", header=TRUE)
AA_data$Genome = factor(AA_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
hline_values = data.frame(Genome=c("Mitochondrial", "Nuclear", "Plastid"), Mean_CCA=c(58.9, 52.2, 63.6))
hline_values$Genome = factor(hline_values$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isoacceptor Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position = "none")
AA_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/aa_R_input2.txt", header=TRUE)
AA_data$Genome = factor(AA_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
hline_values = data.frame(Genome=c("Mitochondrial", "Nuclear", "Plastid"), Mean_CCA=c(58.9, 52.2, 63.6))
hline_values$Genome = factor(hline_values$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isoacceptor Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), legend.position = "none")
AA_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/aa_R_input2.txt", header=TRUE)
AA_data$Genome = factor(AA_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
hline_values = data.frame(Genome=c("Mitochondrial", "Nuclear", "Plastid"), Mean_CCA=c(58.9, 52.2, 63.6))
hline_values$Genome = factor(hline_values$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isoacceptor Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), legend.position = "none", axis.title=element_text(size=8))
AA_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/aa_R_input2.txt", header=TRUE)
AA_data$Genome = factor(AA_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
hline_values = data.frame(Genome=c("Mitochondrial", "Nuclear", "Plastid"), Mean_CCA=c(58.9, 52.2, 63.6))
hline_values$Genome = factor(hline_values$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isoacceptor Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
AA_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/aa_R_input2.txt", header=TRUE)
AA_data$Genome = factor(AA_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
hline_values = data.frame(Genome=c("Mitochondrial", "Nuclear", "Plastid"), Mean_CCA=c(64.5, 52.2, 63.5))
hline_values$Genome = factor(hline_values$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isoacceptor Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
isodecoder_data = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240608/isodecoder_R_input2.txt", header=TRUE)
isodecoder_data$Genome = factor(isodecoder_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=isodecoder_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=isodecoder_data, aes(x=Isodecoder, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_wrap(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=isodecoder_data, aes(x=Isodecoder, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=isodecoder_data, aes(x=Isodecoder, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x", space="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=isodecoder_data, aes(x=Isodecoder, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x", space="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=isodecoder_data, aes(x=Isodecoder, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x", space="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=5.5), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=isodecoder_data, aes(x=Isodecoder, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x", space="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=5.25), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=isodecoder_data, aes(x=Isodecoder, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x", space="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=5.25), axis.text.y = element_text(size=6) legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=isodecoder_data, aes(x=Isodecoder, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x", space="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=5.25), axis.text.y = element_text(size=6), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=isodecoder_data, aes(x=Isodecoder, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5, size=1) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isodecoder Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x", space="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=5.25), axis.text.y = element_text(size=6), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isoacceptor Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x", space="free+x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), axis.text.y = element_text(size=7), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
ggplot(data=AA_data, aes(x=AA, y=100*CCA/(CCA+CC), color=Genome, shape=as.factor(BioRep))) + geom_point(alpha=0.5) + geom_hline(data=hline_values, aes(yintercept=Mean_CCA, color=Genome)) + theme_bw() + xlab ("tRNA Isoacceptor Families") + ylab ("Percentage CCA Tails") + ylim(c(0,100)) + facet_grid(~Genome, scales="free_x", space="free_x") + scale_color_brewer(palette = "Dark2") + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=6.5), axis.text.y = element_text(size=7), legend.position = "none", axis.title=element_text(size=8), strip.text.x = element_text(size = 8))
spike-in_data=read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20240402_novogene_At_MSR-seq2/analysis/20240609/spike-in_summary.csv")
spike_in_data=read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20240402_novogene_At_MSR-seq2/analysis/20240609/spike-in_summary.csv")
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=Measure, cols=Extraction) + theme_bw() + ylim(c(0,100))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=Measure, cols=Extraction) + theme_bw() + ylim(c(0,100))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=spike_in_data$Measure, cols=spike_in_data$Extraction) + theme_bw() + ylim(c(0,100))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100))
spike_in_data=read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20240402_novogene_At_MSR-seq2/analysis/20240609/spike-in_summary.csv")
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(c("gray20","firebrick"))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick"))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top")
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=6), strip.text=element_text(size=7), axis.title=element_text(size=8))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top")
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=6), strip.text=element_text(size=7), axis.title=element_text(size=8))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=6), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank())
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7, size=1) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=6), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7, size=1) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=6), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
library (scales)
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7, size=1) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=6), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7, size=1) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=7), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7, size=1) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=7), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.05, alpha=0.7, size=1) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=7), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.1, alpha=0.7, size=1) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=7), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA)) + geom_jitter(width=0.08, alpha=0.7, size=1) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=7), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA, group=tRNA)) + geom_point(alpha=0.7, size=1, position_dodge(width=0.1)) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=7), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA, group=tRNA)) + geom_point(alpha=0.7, size=1, position=position_dodge(width=0.1)) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=7), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA, group=tRNA)) + geom_point(alpha=0.7, size=1, position=position_dodge(width=0.2)) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=7), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
ggplot(data=spike_in_data, aes(x=Trt, y=Percentage, color=tRNA, group=tRNA)) + geom_point(alpha=0.5, size=1, position=position_dodge(width=0.2)) + facet_grid(rows=vars(spike_in_data$Measure), cols=vars(spike_in_data$Extraction)) + theme_bw() + ylim(c(0,100)) + scale_color_manual(values=c("gray20","firebrick")) + xlab("") + theme(legend.position = "top", axis.text=element_text(size=7), strip.text=element_text(size=7), axis.title=element_text(size=8), legend.title=element_blank(), legend.text=element_text(size=7)) + scale_x_discrete(labels = label_wrap(10))
pairwise_data = read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20240402_novogene_At_MSR-seq2/analysis/20240609/combined_pairwise_comparisons.csv")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + facet_grid (rows=vars(pairwise_data$Comparison, cols=vars(pairwise_data$BioRep))) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + facet_grid (~BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + facet_grid (~BioRep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + facet_grid (~Comparison) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + facet_grid (cols=vars(pairwise_data$Comparison), rows=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + facet_grid (rows=vars(pairwise_data$Comparison)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + geom_abline(intercept = 0, slope = 1) + facet_grid (cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + geom_abline(intercept = 0, slope = 1)
one_to_one <- data.frame(x=c(0,100), y=c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + geom_line(data=one_to_one, aes(x=x, y=y))
ggplot() + geom_point(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome), alpha=0.5) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + geom_line(data=one_to_one, aes(x=x, y=y))
ggplot() + geom_point(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome), alpha=0.5) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + geom_line(data=one_to_one, aes(x=x, y=y)) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer("dark2")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2")
pairwise_data$Genome = factor(pairwise_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
one_to_one
one_to_one = read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20240402_novogene_At_MSR-seq2/analysis/20240609/one_to_one.csv")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + geom_abline(data=one_to_one, aes(x=X, y=Y))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + geom_line(data=one_to_one, aes(x=X, y=Y))
one_to_one
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + geom_hline(intercept=25)
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + geom_hline(yintercept=25)
a=ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (rows=vars(pairwise_data$Comparison), cols=vars(pairwise_data$BioRep)) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
a + geom_hline(yintercept=25)
?facet_grid
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ BioRep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ BioRep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + geom_hline(yintercept=25)
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ BioRep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + geom_abline()
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_abline() + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ BioRep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
pairwise_data = read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20240402_novogene_At_MSR-seq2/analysis/20240609/combined_pairwise_comparisons.csv")
pairwise_data$Genome = factor(pairwise_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_abline() + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ BioRep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_abline() + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_abline(size=0.5) + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_abline(linewidth=0.5) + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_abline(linewidth=0.1) + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.5, size=1) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.5) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.2) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0, 10))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0, 100000000))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0, 10000))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0, 1))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0, 5))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0, 10))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0, 8))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size_area(range = c(0, 8))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size_area()
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(1, 5))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0.5, 3))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0.5, 3), legend=FALSE)
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0.5, 3), guide=none")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0.5, 3), guide="none")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0.5, 3))
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank()) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0.5, 3), guide="none")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank(), axis.text = element_text(size=6), axis.title = element_text(size=7), strip.text = element_text(size=7)) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0.5, 3), guide="none")
ggplot(data=pairwise_data, aes(x=CCA_1, y=CCA_2, color=Genome, size=0.1*Total_Reads)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Comparison ~ Biorep) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank(), axis.text = element_text(size=7), axis.title = element_text(size=8), strip.text = element_text(size=8)) + xlab("Percentage CCA Tails") + ylab("Percentage CCA Tails") + scale_size(range = c(0.5, 3), guide="none")
ap_trizol_data = read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20240402_novogene_At_MSR-seq2/analysis/20240609/AP_trizol_comparison.csv")
ap_trizol_data$Genome = factor(ap_trizol_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear", "Spike-in control"))
ggplot(data=ap_trizol_data, aes(x=Acid_Phenol, y=Trizol, color=Genome)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Count_Type ~ Trt) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank(), axis.text = element_text(size=7), axis.title = element_text(size=8), strip.text = element_text(size=8)) + xlab("Percentage in Acid-Phenol Preps") + ylab("Percentage in Trizol Preps")
ggplot(data=ap_trizol_data, aes(x=100*Acid_Phenol, y=100*Trizol, color=Genome)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Count_Type ~ Trt) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank(), axis.text = element_text(size=7), axis.title = element_text(size=8), strip.text = element_text(size=8)) + xlab("Percentage in Acid-Phenol Preps") + ylab("Percentage in Trizol Preps")
ap_trizol_data = read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20240402_novogene_At_MSR-seq2/analysis/20240609/AP_trizol_comparison.csv")
ap_trizol_data$Genome = factor(ap_trizol_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear", "Spike-in control"))
ggplot(data=ap_trizol_data, aes(x=100*Acid_Phenol, y=100*Trizol, color=Genome)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3) + facet_grid (Count_Type ~ Trt) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank(), axis.text = element_text(size=7), axis.title = element_text(size=8), strip.text = element_text(size=8)) + xlab("Percentage in Acid-Phenol Preps") + ylab("Percentage in Trizol Preps")
ggplot(data=ap_trizol_data, aes(x=100*Acid_Phenol, y=100*Trizol, color=Genome)) + geom_abline(linewidth=0.25) + geom_point(alpha=0.3, size=1) + facet_grid (Count_Type ~ Trt) + theme_bw() + xlim(c(0,100)) + ylim(c(0,100)) + scale_color_brewer(palette = "Dark2") + theme(legend.position="top", legend.title=element_blank(), axis.text = element_text(size=7), axis.title = element_text(size=8), strip.text = element_text(size=8)) + xlab("Percentage in Acid-Phenol Preps") + ylab("Percentage in Trizol Preps")
install.packages("ggridges")
library(ggridges)
test_data=read.csv("Downloads/test.csv")
ggplot(data=test_data, aes(x=CCA_1, y=Genome, color=Genome)) + geom_density_ridges() + facet_wrap(~Biorep) + theme_bw() + scale_color_brewer(palette = "Dark2")
ggplot(data=test_data, aes(x=CCA_1, y=Genome, color=Genome, fill=Genome)) + geom_density_ridges() + facet_wrap(~Biorep) + theme_bw() + scale_color_brewer(palette = "Dark2")
ggplot(data=test_data, aes(x=CCA_1, y=Genome, color=Genome, fill=Genome)) + geom_density_ridges() + facet_wrap(~Biorep) + theme_bw() + scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2")
ggplot(data=test_data, aes(x=CCA_1, y=Genome, color=Genome, fill=Genome)) + geom_density_ridges(alpha=0.5) + facet_wrap(~Biorep) + theme_bw() + scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2")
ggplot(data=test_data, aes(x=CCA_1, y=Genome, color=Genome, fill=Genome)) + geom_density_ridges(alpha=0.5) + facet_wrap(~Biorep) + theme_bw() + scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") + theme(legend.position = "none") + xlab("Percentage CCA Tails")
test_data$Genome = factor(test_data$Genome, levels=c("Plastid", "Mitochondrial", "Nuclear"))
ggplot(data=test_data, aes(x=CCA_1, y=Genome, color=Genome, fill=Genome)) + geom_density_ridges(alpha=0.5) + facet_wrap(~Biorep) + theme_bw() + scale_color_brewer(palette = "Dark2") + scale_fill_brewer(palette = "Dark2") + theme(legend.position = "none") + xlab("Percentage CCA Tails")
ridgeline_data=read.csv("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20240402_novogene_At_MSR-seq2/analysis/20240609/ridgeline_input.csv")
a=c(1,2,3)
b=c(2,4,6)
cor.test(a, b)
?cor.test
cor.test(a, b, method="spearman")
a=c(1,2,3)
b=c(2,4,6)
cor.test(a,b,method="spearman")
a=c(1,2,3,4)
b=c(2,4,6,8)
cor.test(a,b,method="spearman")
a=c(1,2,3,4,5)
b=c(2,3,6,8,11)
cor.test(a,b)
lm(a ~ b)
summary(lm(a ~ b))
a=c(1,2,3)
b=c(1,5,10)
cor.test(a,b, method="spearman")
library (ggplot2)
library(ggh4x)
plastid_starts = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240620/end_mapping/plots/plastid_starts.txt", header=TRUE)
mitochondrial_starts = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240620/end_mapping/plots/mitochondrial_starts.txt", header=TRUE)
nuclear_starts = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240620/end_mapping/plots/nuclear_starts.txt", header=TRUE)
plastid_ends = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240620/end_mapping/plots/plastid_ends.txt", header=TRUE)
mitochondrial_ends = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240620/end_mapping/plots/mitochondrial_ends.txt", header=TRUE)
nuclear_ends = read.table("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240620/end_mapping/plots/nuclear_ends.txt", header=TRUE)
ggplot(data=plastid_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold"))
plastid_start_plot = ggplot(data=plastid_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AlaTGC" ~ scale_y_continuous(limits = c(-94.6332905915606,94.6332905915606)),IsoDecoder == "ArgACG" ~ scale_y_continuous(limits = c(-43.6966040069682,43.6966040069682)),IsoDecoder == "ArgTCT" ~ scale_y_continuous(limits = c(-7.3828136182637,7.3828136182637)),IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-57.9806853752168,57.9806853752168)),IsoDecoder == "AspGTC" ~ scale_y_continuous(limits = c(-37.6108793390696,37.6108793390696)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-19.914362037146,19.914362037146)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-25.0717989441303,25.0717989441303)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-125.976925108859,125.976925108859)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-10.9642885612853,10.9642885612853)),IsoDecoder == "GlyTCC" ~ scale_y_continuous(limits = c(-9.48224110378493,9.48224110378493)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-55.6520762148008,55.6520762148008)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-18.913707846648,18.913707846648)),IsoDecoder == "IleGAT" ~ scale_y_continuous(limits = c(-56.0270153591925,56.0270153591925)),IsoDecoder == "LeuCAA" ~ scale_y_continuous(limits = c(-26.2201924138013,26.2201924138013)),IsoDecoder == "LeuTAA" ~ scale_y_continuous(limits = c(-11.7849770335339,11.7849770335339)),IsoDecoder == "LeuTAG" ~ scale_y_continuous(limits = c(-30.4393383137458,30.4393383137458)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-6.45550919200238,6.45550919200238)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-11.5899660653072,11.5899660653072)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-11.480759489395,11.480759489395)),IsoDecoder == "PheGAA" ~ scale_y_continuous(limits = c(-62.5327481659006,62.5327481659006)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-5.76674772026781,5.76674772026781)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-5.2092753867597,5.2092753867597)),IsoDecoder == "SerGGA" ~ scale_y_continuous(limits = c(-16.9713102630297,16.9713102630297)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-17.0627528264711,17.0627528264711)),IsoDecoder == "ThrGGT" ~ scale_y_continuous(limits = c(-13.9935213245771,13.9935213245771)),IsoDecoder == "ThrTGT" ~ scale_y_continuous(limits = c(-10.1031820486465,10.1031820486465)),IsoDecoder == "TrpCCA" ~ scale_y_continuous(limits = c(-15.8964961010438,15.8964961010438)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-36.207128667473,36.207128667473)),IsoDecoder == "ValGAC" ~ scale_y_continuous(limits = c(-2.3931353503193,2.3931353503193)),IsoDecoder == "ValTAC" ~ scale_y_continuous(limits = c(-14.0634050467744,14.0634050467744))))
plastid_start_plot
mitochondrial_start_plot = ggplot(data=mitochondrial_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-147.626985445917,147.626985445917)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-448.127581620769,448.127581620769)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-5.54787998031688,5.54787998031688)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-72.1273347368769,72.1273347368769)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-70.3816097145652,70.3816097145652)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-89.0360460873362,89.0360460873362)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-11.9452273662618,11.9452273662618)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-28.2525443449033,28.2525443449033)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-8.09560805111614,8.09560805111614)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-4.0439226807083,4.0439226807083)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-35.4162308606246,35.4162308606246)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-25.547683187262,25.547683187262)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-21.4716393477239,21.4716393477239)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-76.1230269704805,76.1230269704805)))
nuclear_start_plot = ggplot(data=nuclear_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AlaAGC" ~ scale_y_continuous(limits = c(-49.4911384754076,49.4911384754076)),IsoDecoder == "AlaCGC" ~ scale_y_continuous(limits = c(-17.6162638684238,17.6162638684238)),IsoDecoder == "AlaTGC" ~ scale_y_continuous(limits = c(-34.9329790233018,34.9329790233018)),IsoDecoder == "ArgACG" ~ scale_y_continuous(limits = c(-11.4341912972409,11.4341912972409)),IsoDecoder == "ArgCCG" ~ scale_y_continuous(limits = c(-6.569805464648,6.569805464648)),IsoDecoder == "ArgCCT" ~ scale_y_continuous(limits = c(-12.5034325331299,12.5034325331299)),IsoDecoder == "ArgTCG" ~ scale_y_continuous(limits = c(-14.9079240432124,14.9079240432124)),IsoDecoder == "ArgTCT" ~ scale_y_continuous(limits = c(-9.19869362690878,9.19869362690878)),IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-15.5130255250041,15.5130255250041)),IsoDecoder == "AspGTC" ~ scale_y_continuous(limits = c(-44.2655477056281,44.2655477056281)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-1.60026642894578,1.60026642894578)),IsoDecoder == "GlnCTG" ~ scale_y_continuous(limits = c(-7.46204239986857,7.46204239986857)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-6.37276159433181,6.37276159433181)),IsoDecoder == "GluCTC" ~ scale_y_continuous(limits = c(-5.86720206748844,5.86720206748844)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-11.9905828456416,11.9905828456416)),IsoDecoder == "GlyCCC" ~ scale_y_continuous(limits = c(-12.5642259839739,12.5642259839739)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-27.6391657451618,27.6391657451618)),IsoDecoder == "GlyTCC" ~ scale_y_continuous(limits = c(-13.1959956871087,13.1959956871087)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-5.38802286719403,5.38802286719403)),IsoDecoder == "IleAAT" ~ scale_y_continuous(limits = c(-39.868859854017,39.868859854017)),IsoDecoder == "IleTAT" ~ scale_y_continuous(limits = c(-0.893098503363845,0.893098503363845)),IsoDecoder == "LeuAAG" ~ scale_y_continuous(limits = c(-31.8511243456079,31.8511243456079)),IsoDecoder == "LeuCAA" ~ scale_y_continuous(limits = c(-7.35322815724464,7.35322815724464)),IsoDecoder == "LeuCAG" ~ scale_y_continuous(limits = c(-6.11626556371954,6.11626556371954)),IsoDecoder == "LeuTAA" ~ scale_y_continuous(limits = c(-4.24996706308315,4.24996706308315)),IsoDecoder == "LeuTAG" ~ scale_y_continuous(limits = c(-28.8754651145999,28.8754651145999)),IsoDecoder == "LysCTT" ~ scale_y_continuous(limits = c(-18.2482545858444,18.2482545858444)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-22.8354691972375,22.8354691972375)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-9.35172339531904,9.35172339531904)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-0.283074484780713,0.283074484780713)),IsoDecoder == "PheGAA" ~ scale_y_continuous(limits = c(-15.3956603547702,15.3956603547702)),IsoDecoder == "ProAGG" ~ scale_y_continuous(limits = c(-4.49863721027518,4.49863721027518)),IsoDecoder == "ProCGG" ~ scale_y_continuous(limits = c(-4.34906809792692,4.34906809792692)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-6.08251672242683,6.08251672242683)),IsoDecoder == "SerAGA" ~ scale_y_continuous(limits = c(-10.7823824067759,10.7823824067759)),IsoDecoder == "SerCGA" ~ scale_y_continuous(limits = c(-3.43728333378974,3.43728333378974)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-5.06912762805998,5.06912762805998)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-3.33466706426666,3.33466706426666)),IsoDecoder == "ThrAGT" ~ scale_y_continuous(limits = c(-5.58240520690206,5.58240520690206)),IsoDecoder == "ThrCGT" ~ scale_y_continuous(limits = c(-7.82019157139211,7.82019157139211)),IsoDecoder == "ThrTGT" ~ scale_y_continuous(limits = c(-12.8463909954649,12.8463909954649)),IsoDecoder == "TrpCCA" ~ scale_y_continuous(limits = c(-175.31204750468,175.31204750468)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-22.6674678595233,22.6674678595233)),IsoDecoder == "ValAAC" ~ scale_y_continuous(limits = c(-9.44992301716108,9.44992301716108)),IsoDecoder == "ValCAC" ~ scale_y_continuous(limits = c(-2.72878125039617,2.72878125039617)),IsoDecoder == "ValTAC" ~ scale_y_continuous(limits = c(-10.277895969609,10.277895969609))))
mitochondrial_start_plot = ggplot(data=mitochondrial_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-147.626985445917,147.626985445917)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-448.127581620769,448.127581620769)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-5.54787998031688,5.54787998031688)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-72.1273347368769,72.1273347368769)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-70.3816097145652,70.3816097145652)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-89.0360460873362,89.0360460873362)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-11.9452273662618,11.9452273662618)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-28.2525443449033,28.2525443449033)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-8.09560805111614,8.09560805111614)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-4.0439226807083,4.0439226807083)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-35.4162308606246,35.4162308606246)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-25.547683187262,25.547683187262)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-21.4716393477239,21.4716393477239)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-76.1230269704805,76.1230269704805)))
mitochondrial_start_plot = ggplot(data=mitochondrial_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-147.626985445917,147.626985445917)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-448.127581620769,448.127581620769)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-5.54787998031688,5.54787998031688)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-72.1273347368769,72.1273347368769)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-70.3816097145652,70.3816097145652)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-89.0360460873362,89.0360460873362)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-11.9452273662618,11.9452273662618)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-28.2525443449033,28.2525443449033)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-8.09560805111614,8.09560805111614)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-4.0439226807083,4.0439226807083)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-35.4162308606246,35.4162308606246)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-25.547683187262,25.547683187262)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-21.4716393477239,21.4716393477239)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-76.1230269704805,76.1230269704805)))
mitochondrial_start_plot = ggplot(data=mitochondrial_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold"))
mitochondrial_start_plot
mitochondrial_start_plot = ggplot(data=mitochondrial_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-147.626985445917,147.626985445917)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-448.127581620769,448.127581620769)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-5.54787998031688,5.54787998031688)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-72.1273347368769,72.1273347368769)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-70.3816097145652,70.3816097145652)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-89.0360460873362,89.0360460873362)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-11.9452273662618,11.9452273662618)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-28.2525443449033,28.2525443449033)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-8.09560805111614,8.09560805111614)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-4.0439226807083,4.0439226807083)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-35.4162308606246,35.4162308606246)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-25.547683187262,25.547683187262)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-21.4716393477239,21.4716393477239)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-76.1230269704805,76.1230269704805)))
)
mitochondrial_start_plot = ggplot(data=mitochondrial_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-147.626985445917,147.626985445917)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-448.127581620769,448.127581620769)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-5.54787998031688,5.54787998031688)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-72.1273347368769,72.1273347368769)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-70.3816097145652,70.3816097145652)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-89.0360460873362,89.0360460873362)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-11.9452273662618,11.9452273662618)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-28.2525443449033,28.2525443449033)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-8.09560805111614,8.09560805111614)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-4.0439226807083,4.0439226807083)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-35.4162308606246,35.4162308606246)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-25.547683187262,25.547683187262)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-21.4716393477239,21.4716393477239)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-76.1230269704805,76.1230269704805))))
nuclear_start_plot = ggplot(data=nuclear_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AlaAGC" ~ scale_y_continuous(limits = c(-49.4911384754076,49.4911384754076)),IsoDecoder == "AlaCGC" ~ scale_y_continuous(limits = c(-17.6162638684238,17.6162638684238)),IsoDecoder == "AlaTGC" ~ scale_y_continuous(limits = c(-34.9329790233018,34.9329790233018)),IsoDecoder == "ArgACG" ~ scale_y_continuous(limits = c(-11.4341912972409,11.4341912972409)),IsoDecoder == "ArgCCG" ~ scale_y_continuous(limits = c(-6.569805464648,6.569805464648)),IsoDecoder == "ArgCCT" ~ scale_y_continuous(limits = c(-12.5034325331299,12.5034325331299)),IsoDecoder == "ArgTCG" ~ scale_y_continuous(limits = c(-14.9079240432124,14.9079240432124)),IsoDecoder == "ArgTCT" ~ scale_y_continuous(limits = c(-9.19869362690878,9.19869362690878)),IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-15.5130255250041,15.5130255250041)),IsoDecoder == "AspGTC" ~ scale_y_continuous(limits = c(-44.2655477056281,44.2655477056281)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-1.60026642894578,1.60026642894578)),IsoDecoder == "GlnCTG" ~ scale_y_continuous(limits = c(-7.46204239986857,7.46204239986857)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-6.37276159433181,6.37276159433181)),IsoDecoder == "GluCTC" ~ scale_y_continuous(limits = c(-5.86720206748844,5.86720206748844)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-11.9905828456416,11.9905828456416)),IsoDecoder == "GlyCCC" ~ scale_y_continuous(limits = c(-12.5642259839739,12.5642259839739)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-27.6391657451618,27.6391657451618)),IsoDecoder == "GlyTCC" ~ scale_y_continuous(limits = c(-13.1959956871087,13.1959956871087)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-5.38802286719403,5.38802286719403)),IsoDecoder == "IleAAT" ~ scale_y_continuous(limits = c(-39.868859854017,39.868859854017)),IsoDecoder == "IleTAT" ~ scale_y_continuous(limits = c(-0.893098503363845,0.893098503363845)),IsoDecoder == "LeuAAG" ~ scale_y_continuous(limits = c(-31.8511243456079,31.8511243456079)),IsoDecoder == "LeuCAA" ~ scale_y_continuous(limits = c(-7.35322815724464,7.35322815724464)),IsoDecoder == "LeuCAG" ~ scale_y_continuous(limits = c(-6.11626556371954,6.11626556371954)),IsoDecoder == "LeuTAA" ~ scale_y_continuous(limits = c(-4.24996706308315,4.24996706308315)),IsoDecoder == "LeuTAG" ~ scale_y_continuous(limits = c(-28.8754651145999,28.8754651145999)),IsoDecoder == "LysCTT" ~ scale_y_continuous(limits = c(-18.2482545858444,18.2482545858444)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-22.8354691972375,22.8354691972375)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-9.35172339531904,9.35172339531904)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-0.283074484780713,0.283074484780713)),IsoDecoder == "PheGAA" ~ scale_y_continuous(limits = c(-15.3956603547702,15.3956603547702)),IsoDecoder == "ProAGG" ~ scale_y_continuous(limits = c(-4.49863721027518,4.49863721027518)),IsoDecoder == "ProCGG" ~ scale_y_continuous(limits = c(-4.34906809792692,4.34906809792692)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-6.08251672242683,6.08251672242683)),IsoDecoder == "SerAGA" ~ scale_y_continuous(limits = c(-10.7823824067759,10.7823824067759)),IsoDecoder == "SerCGA" ~ scale_y_continuous(limits = c(-3.43728333378974,3.43728333378974)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-5.06912762805998,5.06912762805998)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-3.33466706426666,3.33466706426666)),IsoDecoder == "ThrAGT" ~ scale_y_continuous(limits = c(-5.58240520690206,5.58240520690206)),IsoDecoder == "ThrCGT" ~ scale_y_continuous(limits = c(-7.82019157139211,7.82019157139211)),IsoDecoder == "ThrTGT" ~ scale_y_continuous(limits = c(-12.8463909954649,12.8463909954649)),IsoDecoder == "TrpCCA" ~ scale_y_continuous(limits = c(-175.31204750468,175.31204750468)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-22.6674678595233,22.6674678595233)),IsoDecoder == "ValAAC" ~ scale_y_continuous(limits = c(-9.44992301716108,9.44992301716108)),IsoDecoder == "ValCAC" ~ scale_y_continuous(limits = c(-2.72878125039617,2.72878125039617)),IsoDecoder == "ValTAC" ~ scale_y_continuous(limits = c(-10.277895969609,10.277895969609))))
nuclear_start_plot = ggplot(data=nuclear_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AlaAGC" ~ scale_y_continuous(limits = c(-49.491138,49.491138)),IsoDecoder == "AlaCGC" ~ scale_y_continuous(limits = c(-17.616264,17.616264)),IsoDecoder == "AlaTGC" ~ scale_y_continuous(limits = c(-34.932979,34.932979)),IsoDecoder == "ArgACG" ~ scale_y_continuous(limits = c(-11.434191,11.434191)),IsoDecoder == "ArgCCG" ~ scale_y_continuous(limits = c(-6.569805,6.569805)),IsoDecoder == "ArgCCT" ~ scale_y_continuous(limits = c(-12.503433,12.503433)),IsoDecoder == "ArgTCG" ~ scale_y_continuous(limits = c(-14.907924,14.907924)),IsoDecoder == "ArgTCT" ~ scale_y_continuous(limits = c(-9.198694,9.198694)),IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-15.513026,15.513026)),IsoDecoder == "AspGTC" ~ scale_y_continuous(limits = c(-44.265548,44.265548)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-1.600266,1.600266)),IsoDecoder == "GlnCTG" ~ scale_y_continuous(limits = c(-7.462042,7.462042)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-6.372762,6.372762)),IsoDecoder == "GluCTC" ~ scale_y_continuous(limits = c(-5.867202,5.867202)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-11.990583,11.990583)),IsoDecoder == "GlyCCC" ~ scale_y_continuous(limits = c(-12.564226,12.564226)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-27.639166,27.639166)),IsoDecoder == "GlyTCC" ~ scale_y_continuous(limits = c(-13.195996,13.195996)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-5.388023,5.388023)),IsoDecoder == "IleAAT" ~ scale_y_continuous(limits = c(-39.86886,39.86886)),IsoDecoder == "IleTAT" ~ scale_y_continuous(limits = c(-0.893099,0.893099)),IsoDecoder == "LeuAAG" ~ scale_y_continuous(limits = c(-31.851124,31.851124)),IsoDecoder == "LeuCAA" ~ scale_y_continuous(limits = c(-7.353228,7.353228)),IsoDecoder == "LeuCAG" ~ scale_y_continuous(limits = c(-6.116266,6.116266)),IsoDecoder == "LeuTAA" ~ scale_y_continuous(limits = c(-4.249967,4.249967)),IsoDecoder == "LeuTAG" ~ scale_y_continuous(limits = c(-28.875465,28.875465)),IsoDecoder == "LysCTT" ~ scale_y_continuous(limits = c(-18.248255,18.248255)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-22.835469,22.835469)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-9.351723,9.351723)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-0.283074,0.283074)),IsoDecoder == "PheGAA" ~ scale_y_continuous(limits = c(-15.39566,15.39566)),IsoDecoder == "ProAGG" ~ scale_y_continuous(limits = c(-4.498637,4.498637)),IsoDecoder == "ProCGG" ~ scale_y_continuous(limits = c(-4.349068,4.349068)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-6.082517,6.082517)),IsoDecoder == "SerAGA" ~ scale_y_continuous(limits = c(-10.782382,10.782382)),IsoDecoder == "SerCGA" ~ scale_y_continuous(limits = c(-3.437283,3.437283)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-5.069128,5.069128)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-3.334667,3.334667)),IsoDecoder == "ThrAGT" ~ scale_y_continuous(limits = c(-5.582405,5.582405)),IsoDecoder == "ThrCGT" ~ scale_y_continuous(limits = c(-7.820192,7.820192)),IsoDecoder == "ThrTGT" ~ scale_y_continuous(limits = c(-12.846391,12.846391)),IsoDecoder == "TrpCCA" ~ scale_y_continuous(limits = c(-175.312048,175.312048)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-22.667468,22.667468)),IsoDecoder == "ValAAC" ~ scale_y_continuous(limits = c(-9.449923,9.449923)),IsoDecoder == "ValCAC" ~ scale_y_continuous(limits = c(-2.728781,2.728781)),IsoDecoder == "ValTAC" ~ scale_y_continuous(limits = c(-10.277896,10.277896))))
nuclear_start_plot = ggplot(data=nuclear_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AlaAGC" ~ scale_y_continuous(limits = c(-49.4911,49.4911)),IsoDecoder == "AlaCGC" ~ scale_y_continuous(limits = c(-17.6163,17.6163)),IsoDecoder == "AlaTGC" ~ scale_y_continuous(limits = c(-34.933,34.933)),IsoDecoder == "ArgACG" ~ scale_y_continuous(limits = c(-11.4342,11.4342)),IsoDecoder == "ArgCCG" ~ scale_y_continuous(limits = c(-6.5698,6.5698)),IsoDecoder == "ArgCCT" ~ scale_y_continuous(limits = c(-12.5034,12.5034)),IsoDecoder == "ArgTCG" ~ scale_y_continuous(limits = c(-14.9079,14.9079)),IsoDecoder == "ArgTCT" ~ scale_y_continuous(limits = c(-9.1987,9.1987)),IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-15.513,15.513)),IsoDecoder == "AspGTC" ~ scale_y_continuous(limits = c(-44.2655,44.2655)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-1.6003,1.6003)),IsoDecoder == "GlnCTG" ~ scale_y_continuous(limits = c(-7.462,7.462)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-6.3728,6.3728)),IsoDecoder == "GluCTC" ~ scale_y_continuous(limits = c(-5.8672,5.8672)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-11.9906,11.9906)),IsoDecoder == "GlyCCC" ~ scale_y_continuous(limits = c(-12.5642,12.5642)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-27.6392,27.6392)),IsoDecoder == "GlyTCC" ~ scale_y_continuous(limits = c(-13.196,13.196)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-5.388,5.388)),IsoDecoder == "IleAAT" ~ scale_y_continuous(limits = c(-39.8689,39.8689)),IsoDecoder == "IleTAT" ~ scale_y_continuous(limits = c(-0.8931,0.8931)),IsoDecoder == "LeuAAG" ~ scale_y_continuous(limits = c(-31.8511,31.8511)),IsoDecoder == "LeuCAA" ~ scale_y_continuous(limits = c(-7.3532,7.3532)),IsoDecoder == "LeuCAG" ~ scale_y_continuous(limits = c(-6.1163,6.1163)),IsoDecoder == "LeuTAA" ~ scale_y_continuous(limits = c(-4.25,4.25)),IsoDecoder == "LeuTAG" ~ scale_y_continuous(limits = c(-28.8755,28.8755)),IsoDecoder == "LysCTT" ~ scale_y_continuous(limits = c(-18.2483,18.2483)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-22.8355,22.8355)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-9.3517,9.3517)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-0.2831,0.2831)),IsoDecoder == "PheGAA" ~ scale_y_continuous(limits = c(-15.3957,15.3957)),IsoDecoder == "ProAGG" ~ scale_y_continuous(limits = c(-4.4986,4.4986)),IsoDecoder == "ProCGG" ~ scale_y_continuous(limits = c(-4.3491,4.3491)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-6.0825,6.0825)),IsoDecoder == "SerAGA" ~ scale_y_continuous(limits = c(-10.7824,10.7824)),IsoDecoder == "SerCGA" ~ scale_y_continuous(limits = c(-3.4373,3.4373)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-5.0691,5.0691)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-3.3347,3.3347)),IsoDecoder == "ThrAGT" ~ scale_y_continuous(limits = c(-5.5824,5.5824)),IsoDecoder == "ThrCGT" ~ scale_y_continuous(limits = c(-7.8202,7.8202)),IsoDecoder == "ThrTGT" ~ scale_y_continuous(limits = c(-12.8464,12.8464)),IsoDecoder == "TrpCCA" ~ scale_y_continuous(limits = c(-175.312,175.312)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-22.6675,22.6675)),IsoDecoder == "ValAAC" ~ scale_y_continuous(limits = c(-9.4499,9.4499)),IsoDecoder == "ValCAC" ~ scale_y_continuous(limits = c(-2.7288,2.7288)),IsoDecoder == "ValTAC" ~ scale_y_continuous(limits = c(-10.2779,10.2779))))
nuclear_end_plot = ggplot(data=nuclear_ends, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AlaAGC" ~ scale_y_continuous(limits = c(-47.1449,47.1449)),IsoDecoder == "AlaCGC" ~ scale_y_continuous(limits = c(-17.0725,17.0725)),IsoDecoder == "AlaTGC" ~ scale_y_continuous(limits = c(-34.5381,34.5381)),IsoDecoder == "ArgACG" ~ scale_y_continuous(limits = c(-12.3266,12.3266)),IsoDecoder == "ArgCCG" ~ scale_y_continuous(limits = c(-8.2021,8.2021)),IsoDecoder == "ArgCCT" ~ scale_y_continuous(limits = c(-8.6611,8.6611)),IsoDecoder == "ArgTCG" ~ scale_y_continuous(limits = c(-14.8173,14.8173)),IsoDecoder == "ArgTCT" ~ scale_y_continuous(limits = c(-9.5589,9.5589)),IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-11.1405,11.1405)),IsoDecoder == "AspGTC" ~ scale_y_continuous(limits = c(-15.827,15.827)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-1.8678,1.8678)),IsoDecoder == "GlnCTG" ~ scale_y_continuous(limits = c(-7.0563,7.0563)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-3.4003,3.4003)),IsoDecoder == "GluCTC" ~ scale_y_continuous(limits = c(-3.3419,3.3419)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-9.1599,9.1599)),IsoDecoder == "GlyCCC" ~ scale_y_continuous(limits = c(-7.1107,7.1107)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-24.2223,24.2223)),IsoDecoder == "GlyTCC" ~ scale_y_continuous(limits = c(-8.4889,8.4889)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-3.5523,3.5523)),IsoDecoder == "IleAAT" ~ scale_y_continuous(limits = c(-37.6673,37.6673)),IsoDecoder == "IleTAT" ~ scale_y_continuous(limits = c(-1.6361,1.6361)),IsoDecoder == "LeuAAG" ~ scale_y_continuous(limits = c(-17.5692,17.5692)),IsoDecoder == "LeuCAA" ~ scale_y_continuous(limits = c(-8.3803,8.3803)),IsoDecoder == "LeuCAG" ~ scale_y_continuous(limits = c(-3.3211,3.3211)),IsoDecoder == "LeuTAA" ~ scale_y_continuous(limits = c(-4.3542,4.3542)),IsoDecoder == "LeuTAG" ~ scale_y_continuous(limits = c(-31.3883,31.3883)),IsoDecoder == "LysCTT" ~ scale_y_continuous(limits = c(-15.9745,15.9745)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-19.8382,19.8382)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-16.2335,16.2335)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-0.3438,0.3438)),IsoDecoder == "PheGAA" ~ scale_y_continuous(limits = c(-14.7289,14.7289)),IsoDecoder == "ProAGG" ~ scale_y_continuous(limits = c(-3.0497,3.0497)),IsoDecoder == "ProCGG" ~ scale_y_continuous(limits = c(-1.9553,1.9553)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-3.0337,3.0337)),IsoDecoder == "SerAGA" ~ scale_y_continuous(limits = c(-10.0222,10.0222)),IsoDecoder == "SerCGA" ~ scale_y_continuous(limits = c(-2.7551,2.7551)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-4.1307,4.1307)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-2.5718,2.5718)),IsoDecoder == "ThrAGT" ~ scale_y_continuous(limits = c(-4.461,4.461)),IsoDecoder == "ThrCGT" ~ scale_y_continuous(limits = c(-3.6271,3.6271)),IsoDecoder == "ThrTGT" ~ scale_y_continuous(limits = c(-8.8457,8.8457)),IsoDecoder == "TrpCCA" ~ scale_y_continuous(limits = c(-111.8872,111.8872)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-12.813,12.813)),IsoDecoder == "ValAAC" ~ scale_y_continuous(limits = c(-9.6495,9.6495)),IsoDecoder == "ValCAC" ~ scale_y_continuous(limits = c(-2.6356,2.6356)),IsoDecoder == "ValTAC" ~ scale_y_continuous(limits = c(-9.9044,9.9044))))
mitochondrial_end_plot = ggplot(data=mitochondrial_ends, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-130.633713749411,130.633713749411)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-358.473949638953,358.473949638953)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-4.63809185899445,4.63809185899445)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-50.1343193049821,50.1343193049821)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-56.416720864359,56.416720864359)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-40.4244519441228,40.4244519441228)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-9.97230035471534,9.97230035471534)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-23.1313381385626,23.1313381385626)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-8.41493191903198,8.41493191903198)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-6.78191602442365,6.78191602442365)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-26.717772554079,26.717772554079)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-12.7862157210675,12.7862157210675)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-15.1096855451692,15.1096855451692)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-48.7614323702965,48.7614323702965))))
plastid_end_plot = ggplot(data=plastid_ends, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping End Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AlaTGC" ~ scale_y_continuous(limits = c(-65.881966981085,65.881966981085)),IsoDecoder == "ArgACG" ~ scale_y_continuous(limits = c(-46.4980754717199,46.4980754717199)),IsoDecoder == "ArgTCT" ~ scale_y_continuous(limits = c(-10.1010645371904,10.1010645371904)),IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-82.9925798937233,82.9925798937233)),IsoDecoder == "AspGTC" ~ scale_y_continuous(limits = c(-20.2370561430661,20.2370561430661)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-21.5975378833337,21.5975378833337)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-16.9583301293017,16.9583301293017)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-98.4618418641124,98.4618418641124)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-7.83444262714666,7.83444262714666)),IsoDecoder == "GlyTCC" ~ scale_y_continuous(limits = c(-8.19000150745394,8.19000150745394)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-38.3255260596303,38.3255260596303)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-28.2943883229571,28.2943883229571)),IsoDecoder == "IleGAT" ~ scale_y_continuous(limits = c(-47.2880968984359,47.2880968984359)),IsoDecoder == "LeuCAA" ~ scale_y_continuous(limits = c(-20.8220245113959,20.8220245113959)),IsoDecoder == "LeuTAA" ~ scale_y_continuous(limits = c(-11.2653706948883,11.2653706948883)),IsoDecoder == "LeuTAG" ~ scale_y_continuous(limits = c(-26.033198943372,26.033198943372)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-7.58001676306179,7.58001676306179)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-10.1786816320923,10.1786816320923)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-6.7073169180506,6.7073169180506)),IsoDecoder == "PheGAA" ~ scale_y_continuous(limits = c(-49.7799519088127,49.7799519088127)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-4.88395701278198,4.88395701278198)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-3.75617753373766,3.75617753373766)),IsoDecoder == "SerGGA" ~ scale_y_continuous(limits = c(-9.26944181423515,9.26944181423515)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-14.8294079801755,14.8294079801755)),IsoDecoder == "ThrGGT" ~ scale_y_continuous(limits = c(-11.7687253871072,11.7687253871072)),IsoDecoder == "ThrTGT" ~ scale_y_continuous(limits = c(-8.59464159373864,8.59464159373864)),IsoDecoder == "TrpCCA" ~ scale_y_continuous(limits = c(-15.6904633575577,15.6904633575577)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-41.8261598499756,41.8261598499756)),IsoDecoder == "ValGAC" ~ scale_y_continuous(limits = c(-2.43826562510361,2.43826562510361)),IsoDecoder == "ValTAC" ~ scale_y_continuous(limits = c(-10.5886738212777,10.5886738212777))))
setwd("/Users/sloan/Documents/ColoradoState/projects/tRNAs/MSR-seq/Sequencing/20231206_novogene_At_MSR-seq/Analysis/20240620/end_mapping/plots")
ggsave(plastid_start_plot, width=6.7, height=4.5)
?ggsave
ggsave("plastid_start_plot.pdf", plot=plastid_start_plot width=6.7, height=4.5)
ggsave("plastid_start_plot.pdf", plot=plastid_start_plot, width=6.7, height=4.5)
ggsave(plastid_start_plot, width=6.7, height=4.5)
ggsave("mitochondrial_start_plot.pdf", plot=mitochondrial_start_plot, width=6.7, height=3.25)
ggsave("mitochondrial_start_plot.pdf", plot=mitochondrial_start_plot, width=6.7, height=3)
ggsave("mitochondrial_start_plot.pdf", plot=mitochondrial_start_plot, width=6.7, height=3.1)
ggsave("nuclear_start_plot.pdf", plot=nuclear_start_plot, width=6.7, height=7.5)
ggsave("nuclear_start_plot.pdf", plot=nuclear_start_plot, width=6.7, height=6.8)
ggsave("plastid_end_plot.pdf", plot=plastid_end_plot, width=6.7, height=4.5)
ggsave("mitochondrial_end_plot.pdf", plot=mitochondrial_end_plot, width=6.7, height=3.1)
ggsave("nuclear_end_plot.pdf", plot=nuclear_end_plot, width=6.7, height=6.8)
plastid_start_plot = ggplot(data=plastid_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping Start Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AlaTGC" ~ scale_y_continuous(limits = c(-94.6332905915606,94.6332905915606)),IsoDecoder == "ArgACG" ~ scale_y_continuous(limits = c(-43.6966040069682,43.6966040069682)),IsoDecoder == "ArgTCT" ~ scale_y_continuous(limits = c(-7.3828136182637,7.3828136182637)),IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-57.9806853752168,57.9806853752168)),IsoDecoder == "AspGTC" ~ scale_y_continuous(limits = c(-37.6108793390696,37.6108793390696)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-19.914362037146,19.914362037146)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-25.0717989441303,25.0717989441303)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-125.976925108859,125.976925108859)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-10.9642885612853,10.9642885612853)),IsoDecoder == "GlyTCC" ~ scale_y_continuous(limits = c(-9.48224110378493,9.48224110378493)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-55.6520762148008,55.6520762148008)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-18.913707846648,18.913707846648)),IsoDecoder == "IleGAT" ~ scale_y_continuous(limits = c(-56.0270153591925,56.0270153591925)),IsoDecoder == "LeuCAA" ~ scale_y_continuous(limits = c(-26.2201924138013,26.2201924138013)),IsoDecoder == "LeuTAA" ~ scale_y_continuous(limits = c(-11.7849770335339,11.7849770335339)),IsoDecoder == "LeuTAG" ~ scale_y_continuous(limits = c(-30.4393383137458,30.4393383137458)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-6.45550919200238,6.45550919200238)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-11.5899660653072,11.5899660653072)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-11.480759489395,11.480759489395)),IsoDecoder == "PheGAA" ~ scale_y_continuous(limits = c(-62.5327481659006,62.5327481659006)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-5.76674772026781,5.76674772026781)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-5.2092753867597,5.2092753867597)),IsoDecoder == "SerGGA" ~ scale_y_continuous(limits = c(-16.9713102630297,16.9713102630297)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-17.0627528264711,17.0627528264711)),IsoDecoder == "ThrGGT" ~ scale_y_continuous(limits = c(-13.9935213245771,13.9935213245771)),IsoDecoder == "ThrTGT" ~ scale_y_continuous(limits = c(-10.1031820486465,10.1031820486465)),IsoDecoder == "TrpCCA" ~ scale_y_continuous(limits = c(-15.8964961010438,15.8964961010438)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-36.207128667473,36.207128667473)),IsoDecoder == "ValGAC" ~ scale_y_continuous(limits = c(-2.3931353503193,2.3931353503193)),IsoDecoder == "ValTAC" ~ scale_y_continuous(limits = c(-14.0634050467744,14.0634050467744))))
mitochondrial_start_plot = ggplot(data=mitochondrial_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping Start Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-147.626985445917,147.626985445917)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-448.127581620769,448.127581620769)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-5.54787998031688,5.54787998031688)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-72.1273347368769,72.1273347368769)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-70.3816097145652,70.3816097145652)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-89.0360460873362,89.0360460873362)),IsoDecoder == "IleCAT" ~ scale_y_continuous(limits = c(-11.9452273662618,11.9452273662618)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-28.2525443449033,28.2525443449033)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-8.09560805111614,8.09560805111614)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-4.0439226807083,4.0439226807083)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-35.4162308606246,35.4162308606246)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-25.547683187262,25.547683187262)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-21.4716393477239,21.4716393477239)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-76.1230269704805,76.1230269704805))))
nuclear_start_plot = ggplot(data=nuclear_starts, aes(x=SprinzlPos, y=TPM/1000, fill=Type)) + geom_col() + facet_wrap(~IsoDecoder, scales="free_y", ncol = 6) + theme_bw() + ylab("Read Count") +xlab ("Read Mapping Start Position") + scale_fill_manual(values=c("gray20","firebrick")) + theme(legend.position = "top", strip.text = element_text(size=5, margin = margin(2,2,2,2)), axis.text = element_text(size=5), legend.title = element_blank(), legend.text=element_text(size=7), axis.title = element_text(size=8,face="bold")) + facetted_pos_scales( y = list (IsoDecoder == "AlaAGC" ~ scale_y_continuous(limits = c(-49.4911,49.4911)),IsoDecoder == "AlaCGC" ~ scale_y_continuous(limits = c(-17.6163,17.6163)),IsoDecoder == "AlaTGC" ~ scale_y_continuous(limits = c(-34.933,34.933)),IsoDecoder == "ArgACG" ~ scale_y_continuous(limits = c(-11.4342,11.4342)),IsoDecoder == "ArgCCG" ~ scale_y_continuous(limits = c(-6.5698,6.5698)),IsoDecoder == "ArgCCT" ~ scale_y_continuous(limits = c(-12.5034,12.5034)),IsoDecoder == "ArgTCG" ~ scale_y_continuous(limits = c(-14.9079,14.9079)),IsoDecoder == "ArgTCT" ~ scale_y_continuous(limits = c(-9.1987,9.1987)),IsoDecoder == "AsnGTT" ~ scale_y_continuous(limits = c(-15.513,15.513)),IsoDecoder == "AspGTC" ~ scale_y_continuous(limits = c(-44.2655,44.2655)),IsoDecoder == "CysGCA" ~ scale_y_continuous(limits = c(-1.6003,1.6003)),IsoDecoder == "GlnCTG" ~ scale_y_continuous(limits = c(-7.462,7.462)),IsoDecoder == "GlnTTG" ~ scale_y_continuous(limits = c(-6.3728,6.3728)),IsoDecoder == "GluCTC" ~ scale_y_continuous(limits = c(-5.8672,5.8672)),IsoDecoder == "GluTTC" ~ scale_y_continuous(limits = c(-11.9906,11.9906)),IsoDecoder == "GlyCCC" ~ scale_y_continuous(limits = c(-12.5642,12.5642)),IsoDecoder == "GlyGCC" ~ scale_y_continuous(limits = c(-27.6392,27.6392)),IsoDecoder == "GlyTCC" ~ scale_y_continuous(limits = c(-13.196,13.196)),IsoDecoder == "HisGTG" ~ scale_y_continuous(limits = c(-5.388,5.388)),IsoDecoder == "IleAAT" ~ scale_y_continuous(limits = c(-39.8689,39.8689)),IsoDecoder == "IleTAT" ~ scale_y_continuous(limits = c(-0.8931,0.8931)),IsoDecoder == "LeuAAG" ~ scale_y_continuous(limits = c(-31.8511,31.8511)),IsoDecoder == "LeuCAA" ~ scale_y_continuous(limits = c(-7.3532,7.3532)),IsoDecoder == "LeuCAG" ~ scale_y_continuous(limits = c(-6.1163,6.1163)),IsoDecoder == "LeuTAA" ~ scale_y_continuous(limits = c(-4.25,4.25)),IsoDecoder == "LeuTAG" ~ scale_y_continuous(limits = c(-28.8755,28.8755)),IsoDecoder == "LysCTT" ~ scale_y_continuous(limits = c(-18.2483,18.2483)),IsoDecoder == "LysTTT" ~ scale_y_continuous(limits = c(-22.8355,22.8355)),IsoDecoder == "Met(e)CAT" ~ scale_y_continuous(limits = c(-9.3517,9.3517)),IsoDecoder == "Met(i)CAT" ~ scale_y_continuous(limits = c(-0.2831,0.2831)),IsoDecoder == "PheGAA" ~ scale_y_continuous(limits = c(-15.3957,15.3957)),IsoDecoder == "ProAGG" ~ scale_y_continuous(limits = c(-4.4986,4.4986)),IsoDecoder == "ProCGG" ~ scale_y_continuous(limits = c(-4.3491,4.3491)),IsoDecoder == "ProTGG" ~ scale_y_continuous(limits = c(-6.0825,6.0825)),IsoDecoder == "SerAGA" ~ scale_y_continuous(limits = c(-10.7824,10.7824)),IsoDecoder == "SerCGA" ~ scale_y_continuous(limits = c(-3.4373,3.4373)),IsoDecoder == "SerGCT" ~ scale_y_continuous(limits = c(-5.0691,5.0691)),IsoDecoder == "SerTGA" ~ scale_y_continuous(limits = c(-3.3347,3.3347)),IsoDecoder == "ThrAGT" ~ scale_y_continuous(limits = c(-5.5824,5.5824)),IsoDecoder == "ThrCGT" ~ scale_y_continuous(limits = c(-7.8202,7.8202)),IsoDecoder == "ThrTGT" ~ scale_y_continuous(limits = c(-12.8464,12.8464)),IsoDecoder == "TrpCCA" ~ scale_y_continuous(limits = c(-175.312,175.312)),IsoDecoder == "TyrGTA" ~ scale_y_continuous(limits = c(-22.6675,22.6675)),IsoDecoder == "ValAAC" ~ scale_y_continuous(limits = c(-9.4499,9.4499)),IsoDecoder == "ValCAC" ~ scale_y_continuous(limits = c(-2.7288,2.7288)),IsoDecoder == "ValTAC" ~ scale_y_continuous(limits = c(-10.2779,10.2779))))
ggsave("plastid_start_plot.pdf", plot=plastid_start_plot, width=6.7, height=4.5)
ggsave("mitochondrial_start_plot.pdf", plot=mitochondrial_start_plot, width=6.7, height=3.1)
ggsave("nuclear_start_plot.pdf", plot=nuclear_start_plot, width=6.7, height=6.8)
